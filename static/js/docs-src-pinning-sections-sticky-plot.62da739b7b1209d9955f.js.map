{"version":3,"sources":["/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/docs/src/components/DemoStickyPlot.jsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/docs/src/PinningSections/StickyPlot.mdx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/docs/src/components/DescriptionBox.jsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/docs/src/config/shared-styles.js","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/hooks/useActiveSectionInfo.ts","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/hooks/usePlot.tsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/components/Plot.tsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/components/StickyPlot.tsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/index.ts"],"names":["BorderedStickyPlot","styled","StickyPlot","_templateObject","borderedStyle","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","objectWithoutProperties","index_es","assign","mdxType","id","parentName","href","index_esm","__position","__code","__scope","this","Playground","PageProvider","Section","DemoWrapper","CenterBox","DescriptionBox","defaultColors","__codesandbox","src","color","gray","renderOverlay","react_default","a","Fragment","trackingId","style","height","position","red","blue","_ref2","activeSection","scrolledRatio","isIntersecting","ratio","toFixed","className","isMDXComponent","DEFAULT_COLOR","primary","styledComponents","div","_ref$color","_ref2$color","transparentize","mq","greaterThan","_templateObject2","background","css","concat","lighten","white","_ref3","_ref3$color","text","useActiveSectionInfo","intersectObsr$","activeSectionObs$","useContext","PageContext","setSubscription","useSubscription","_useState","useState","_useState2","slicedToArray","setActiveSection","isIntersectingObs","useRef","pipe","map","activeSectionObsrRef","of","merge","current","switchMap","activeSectionInfo","undefined","filter","info","useEffect","subscribe","next","usePlot","plotRef","useIntersectionObservable","sectionInfo","useScrolledRatio","Plot","children","restProps","_usePlot","createElement","ref","objectSpread","outerStyle","stickyStyle","getStickyPosition","__webpack_require__","d","__webpack_exports__","StickyPlot_StickyPlot"],"mappings":"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","file":"static/js/docs-src-pinning-sections-sticky-plot.27ac3901.js","sourcesContent":["import styled from 'styled-components';\nimport { StickyPlot } from '@react-scrolly/plot'\n\nimport { borderedStyle } from '../config/shared-styles';\n\nexport const BorderedStickyPlot = styled(StickyPlot)`${borderedStyle}`;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { PageProvider, Section } from '@react-scrolly/core';\nimport { DemoWrapper } from '../components/DemoWrapper';\nimport { CenterBox } from '../components/CenterBox';\nimport { DescriptionBox } from '../components/DescriptionBox';\nimport { BorderedStickyPlot as StickyPlot } from '../components/DemoStickyPlot';\nimport { defaultColors } from '../config/theme';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"stickyplot\"\n    }}>{`StickyPlot`}</h1>\n    <p><inlineCode parentName=\"p\">{`<StickyPlot>`}</inlineCode>{` is another kind of `}<a parentName=\"p\" {...{\n        \"href\": \"/scroll_tracking/plot\"\n      }}>{`Plot`}</a>{` which sticks its main content on the background when the top of the plot reaches the top of the viewport,\nand it lets the supplementary content scroll through its sticky background.`}</p>\n    <p>{`Its usage is close to `}<a parentName=\"p\" {...{\n        \"href\": \"/pinning_sections/sticky_scene\"\n      }}>{`StickyScene`}</a>{`,\nand it provides additional function by letting you track the scrolling progress of `}<inlineCode parentName=\"p\">{`<Section>`}</inlineCode>{` closet to the bottom of the viewport with `}<inlineCode parentName=\"p\">{`trackingId`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'<PageProvider>\\n  <StickyPlot\\n    color={defaultColors.gray}\\n    renderOverlay={\\n      <>\\n        <Section\\n          trackingId=\\\"DESC-1\\\"\\n          style={{ height: \\'80vh\\', position: \\'relative\\' }}\\n        >\\n          {() => (\\n            <DescriptionBox color={defaultColors.gray}>\\n              <h4>Description #1</h4>\\n              <p>Supplementary content #1</p>\\n            </DescriptionBox>\\n          )}\\n        </Section>\\n        <Section\\n          trackingId=\\\"DESC-2\\\"\\n          style={{ height: \\'80vh\\', position: \\'relative\\' }}\\n        >\\n          {() => (\\n            <DescriptionBox color={defaultColors.red}>\\n              <h4>Description #2</h4>\\n              <p>Supplementary content #2</p>\\n            </DescriptionBox>\\n          )}\\n        </Section>\\n        <Section\\n          trackingId=\\\"DESC-3\\\"\\n          style={{ height: \\'80vh\\', position: \\'relative\\' }}\\n        >\\n          {() => (\\n            <DescriptionBox color={defaultColors.blue}>\\n              <h4>Description #3</h4>\\n              <p>Supplementary content #3</p>\\n            </DescriptionBox>\\n          )}\\n        </Section>\\n      </>\\n    }\\n  >\\n    {({ activeSection, isIntersecting, scrolledRatio }) =>\\n      activeSection && (\\n        <CenterBox>\\n          <p>Description box you are viewing:</p>\\n          <li>\\n            You are viewing <b>{activeSection.id}</b> section\\n          </li>\\n          <li>\\n            Reading Ratio: <b>{activeSection.ratio.toFixed(4)}</b>\\n          </li>\\n          <p>Whole {\\'<Plot>\\'}:</p>\\n          <li>\\n            scrolledRatio: <b>{scrolledRatio.toFixed(4)}</b>\\n          </li>\\n        </CenterBox>\\n      )\\n    }\\n  </StickyPlot>\\n</PageProvider>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      PageProvider,\n      Section,\n      DemoWrapper,\n      CenterBox,\n      DescriptionBox,\n      StickyPlot,\n      defaultColors\n    }} __codesandbox={`N4IgZglgNgpgziAXKCA7AJjAHgOgBYAuAtlEqAMYD2qBMNSIAPOhAG4AEE6AvADogAnSpQL8AfIwD0LVmJABfADQg0mXACsEyEFRp0CDSQCojvVO3YAVPBDjsAwpUwBlAIYYARpSzs8rux4wdOyuAK4ElESuBBDkrlBQAJ7sAOZ0MALRMOjsoXBoKWYWAAZUmHDu6F5YGcU47ACSYOyJlKEA5AIw7OShAhBtdniUAO7sBH4Evq4ADjPp6IotbT3uRT14MOQA1uxtU20C7OiU5EMZMIi-BAQzcIiSkikQE6EeOFREkmXwldXfTl-nm8GTM6yay1C7Gw836dHI3XcyTgBAEoRSKVgdhGLzw4xsdgqwKwSxmsH83UytkR5lscFCMHW1FSuLe9UQAEozEZJGYIEQZpQBFMAEowVzkKZgIREdidcWS9oAbj5AqFooVBAAIgB5ACy7GlkTlXQlBAAtCciMrVYLhQ5IoLUPpDTK5ThJNhXALYDbUGYxWbdXqcF0MBkABTrZhsMTrCyMPAAZjEjjVzponDVwuy7BxEx6gKJVRBAkQUmTcfMFnYjBmYgjDSmUWSztzrnQLBi1Hi7BmQju40oqRgUxe7DDmH6qBSeZgCQ5Unr8draadLskVYT0ljijMJ16RH0ODSBAAorAjzQAEKJBroCOdYQEdpc1AcpUKZRen0wHCaMgdGoWh6EQFRsymYB2AABSgVxEhSIRQgwdh5FdY12gPAAvP1-TtSCYNcNJoKEVguAyJZnC2btzDQo1ZXaAABU1JXNOByCEBJEgBLpcIg9goK1GAiEoAB1TI5gyVD0IYj0DzgSQ4AEcgAXTfQFKEkTxNmWE-PwgSHH0DJr28aT6PdaRTgUpSVM-dcaAU-wjIEEysD09UDKE9j-hmGjXLMt12jkqzFOU1T7IIDT4A4iBfIGVBXPc-0oJMgQp2yZwYh2RJYJEEI7Ey2JthyqA8rowLgrOULbMdah1MkTTKEK7LcpfFVUDwjyoMwMAwigAhHFKgQ7HKjDKussLdEgFJJAmYSYCSjUzRkk1NXaMFUF0FFjlOLDMsSLF2G4AT1iiARnlQK52gABnYJMZjcvdqxmDsWBnK6ABYHvYAA2B72ieiwwGAgAxb1oESK7-GcQ4EQdTAYKEfglhE1BKDgF6EQB9ZgZoZwICwy52AARg-p75A2rapgAQTmI72AjKDyBsKB0DDVCOSOsQGejGR2BRA6YG4YBsP2rF5C3GtgGZ6A2eCAAyeXxkSeZKGaGXWfZ7htblMBkMleL2nYAB-DZZbDCNOauDW5dQCnqykGQqzfMwYQ8nq-qmS2uZ5h3aeXasE0DSUcBBzIUivAhJZrWtoKImASMoMip2jmPa2a4rWpXNPCyG4WPdCfrBqFOAT0yRJ7ZzmPJwyHVWAyODEmF7Oq8YVOq5rRgqIN6gW47ixUQlbYCnvPgQC1M9nHsc1if4Pv-4F2BhagzYIBSQgroADmu1g8ABvt0ZeeKrq6OCYnro35Er_uY_bm-BO97huajQP75jxgvJiuLqH8qg85FmAvVC4DUoENUuiF4IS3nm_RMH0xCfx8jRdgABiYmFY4HQPvnWMQzhQhzEvPoVwAhki6BAlMVBS474wIatFRB8VXJUP7hya-1Du40UYTnLu1F4qYJzoPHYI8eD8AnlPc0AAmOer836LyFsAFeMA14bzlNvXe-9BT5Boifec0Q2ALVQiw--HCq7AEfs_XhrcEGxT8qZP-Qp86AM9sXYaoZshQKkW_TueA4GWO_uYZBYj0FGJvtg3B-D5o0CISQ4CLp_GUPMZwmh3krH0O8EEtOzD4m1kkGw-KaSEw5N7u4m-_Dh4zlHsIye08kySI8TWGRy9fAKPXgQLeO896kkPpo1aZ9dGXwMTfPJUtTG-1qe_Hx1ifC2IEPYoBRdQElxwB4KADI3GjLTrA-BtDknMmQUmQJmTOH1lCWScJBBImFj0JmXZcSilYMSV_CZgyLAZNuQkgpqA0lSCMf0msRiTFQTNLo95SxbAND0MNbhM4ljeVAbAdAIodHDnkJzJ-5jAX13eewRWIyPGMCcuChhBzaz1nGfFdg1RIQhC6OwMiMAcTvRuWsxgUAIBPJrAATRWEQ7otL6WzkYB4MQwB0UwHeTgLg8gpCCv5twwpTLJAsrZcy1lRKLCBjerOBF3YrgCqFSKsVmRuw4AiCDCANQHwfWYVKpVCqVWvNbvWUSwxYACXaIwVqYh2jyHLJIAOTLFWqv5hxWF2QtUDB1YK4AMKEihsRcaygprzURktZKyQgqiVSADfa9-kh8W0Bcqk8xb4b4_O3BnEqIg75SDjsRUi5EBCpykMHAgodw6R0llIf2zszBfhAPJaq4U6oORoVpCSsJ_xwCwIBUh-gGCdXtDI9Aa4h2RRWu0Rd5o7IrrgH6V2WB9JU3YI1bSkkjjHUXcujMkUcAyGKOsF6nYChXDEV0WUxNX3tQsGdC6VxiY4E3q-9g11P3kqHohNoGArjILADB2DIGvBpQyOaTILA8hXAAKwPXg94NifgTgjCuLdYmYjvpiJIz4W650PCuAjNdRQdG6M4Guj9DkSxbp_R8KTb6lGUjUdo_RgTTGkwfjMMUdqvb-02UHVexyzlXITqndoGdoFwL6QvbVGTa6N1bpk4tdgRAACOa6cAeimmvSQR4WCuHNAZhkcId3tXnQRAucywEBTGqZ6g01ZqbCPLu50-6PKHrzcZUy56CCCyXRp9SN62B3uep04-IQPBwFAeEGAIGIgzAw9dAApCB2AYAWnsHQ3lzLmRUBwGBgIIgVxB6VbPjACM5pSu5aWC1vLInqy4wtPkQmv6cDvuEgV2wvWIuwCuGjZ07V1gABJgCGbLuKfN1h3CPhEh4aAC0OTxZjj1tiBMiZ_vQx-9YxR7brC8SdV-1GdjgeQugK482XMgLAYssDSEMDyBAxYFgGNG5XDQCy505olmnG2D9vsr0n1AcG4B66OATvDZXAhqcyGOwQDQ79LDK4plPYAbM17Cz-z8kid9lc360DmkK8V80COkdEBAxd6sHhrsxwfRqwjTGGew7EQzyHqOkMocx_cO6OObsfYg49icvGaN8_Q0seXiv0MK9h5vdDXWY54_YPNxm5LQFRaGvTF7TjS5LIZBzH2XhWZOPJ9WZnFgWWIECNV7owBcfRJoFcfggAiAn4JDjnBRkOKOK0NxnHuhr45N_M5xECK5M9E-JpQfaQpSZ0_VUlP9vAKenZ7gwYEnP83G9kS96ktPF_QJu6LDk9NQXqxjblNBDvuYYoKFlcBNjoHWv6Dq_FDPGc86gbzlmIDWdsxkCA8Ba_HAccA03Lf3SD-83NPzM3NrUG2hPEG1MACqAAZSwAB9ewOo986hFMb2frnif9DOokNfbt7SHszwlMLRfIul4crF1gu2D4aKS64ClmlrQJlpQNlkBiBv0M0oRiBjiOgBML-tdGVpdk0koh9MgSzjhn1jDoLgIKDt4NhohmWGLj4KliyjkLrkzDHvTFvrvgfsfqfufpbk_LnEKHbhYLgejqhqLuRvBpLg9vjnrlMjQWeNvvvkfifmfhfsij7PXi9GGDEITLRv-ksFMswiBoHu9CTIjqdj3hYPNotohMthkKtqgOtpQJtr6DtiuHAQgSVuhvlmdg7r4B9GzjWLdtsPdpBjrgTo4jHmbvwV9pDn9mSPBIDqgMDjAKDqVDsAHtDloQjmHrDvzijkKGjsLljhxpDpTqgNToArTgjkmLoVrjHlHlfkTs4iTnfuwahInj2snpJpNNXpFCOk1FlJnKVC2poIphQHnnOvxIuuXpFlXmpDXo5vxFBOWq1AvkxCxL1sGlxL6p0d3raF1PrkQRlMXjMSZgCEPuZh3typXjIg5htI_lMIeqlOlOgFMZ0fTIuhGDcSIDtvNrgZsYLPIGJvUcoI0TVHsTNCvn-ABEpn0WBIeiKGeFqPTO0MgoAkmDAEmD9P5mcRcttNHm5sdO7s9LfpElcOCVqIDKBndp9tLtCWAEmGSWSdjNWLQFgMVtCWIpvGIuQEmB9FSRYHHldMgpvK4AAJw_QeDExsnkrLJEzQnEweAADsP0YAgpBJIwNgtAnJsGsGQpXQ0ueJBJQo7gaQSpYAm8MAYiHgQpiQ84pUBGco0GYA6AP010rgQpRhdAnJYiH06ArgEprJBJMwfQJynJm8EpKu1pVJzOyJh6cAsqqAYs3QGJp0RCP6coYQEQQpq80BcoSYbSQp2uaJCy5uMABJuBVwxQ90pBoCXAPhWZse5cHxnp8RKQV0YeQpORlgYBV05oRZQpuBCK3BV0bZ5MSe3xqeTRfxFm2Qo-Nmdmk-pcQJvRly-eqmaxaQzohqMAeoI5rgMxG6I-Y-dmiQ_mh6_ex0C5GQWQK5VmjM6w5Q2wWWV0Ep-p1oBJcE50opEp10wkQpZySyo4V0NpiOr5BJG2W2n0P0v5ZgyKD-gW9oL2-mBmfZKeVUaeXm-xfgapbExek5Wg05ZC_R-kTMcAI0QxcKIxEUJxve2F7ALKzSwQo0reJZHe2QKxJFHk_e5kQUS-5mm5Y5E-U-4xpF5ZeFzFOxZm_xvmC0YFB6G-Uwrx1xWxx0ZwcAv-6iR81AVwp8Oi9cIGOR5oV57ArZ4u-h_yjSIezB3MyZhAJs7AxQJlxW82llHx7Ak2hcUANR-ZPhQh1Bx0vFZc8ERl5lYiiO30ZBpZ825FhAdAyhYiHIEYahHxTlaRQuGOWOvBG0FgeA6GbhQMwEB2_W2h10KRr8GlWl4iulNYGlNOVwhVWAkO2uz25RpuOA8pLwMANRHBgRleVV-lwh7lNV_hxq2AUwMhLBUyTVxwtgoRkMnAERaAURYOsRK4mhtZvOPOCO_pxR7hsVeBGRPBRVelhhpoK2fgZh7Q_5Vhv-e2GVfWR2g2uVMc526w9snxqAvamM2w8cE61AueM5DAmJFg_AqA3ojISA7A_APwxY1QSGP4JyyM6w_A9cw0PCAN_ACOiNkN1Y_A5QDycN3uIA1M_MeELq4NLqmAZIlAJpOQeQBQE4moVe5QfwpYyN31IAUQaA_AmNqg2AE6dNgNfaMA8w4Ym0E5zNaVnN2EAt_AAAen-r5ddBzfTXMSLSAOLT9P-jgD9NLZzdps0XAHLaLR9INjgNUiAASfTW3rYHgFrQjr5frYbWrRXuaOxePsQlrb5X-rPAbSuPwHMZaJEFrcTIrZvMrTUrUXbL2iDdnoJa9Q9cCR9WBO7iALQD6FkMzUDbtVER7TpPwPIAoFfEAA`} mdxType=\"Playground\">\n  <PageProvider mdxType=\"PageProvider\">\n    <StickyPlot color={defaultColors.gray} renderOverlay={<>\n          <Section trackingId=\"DESC-1\" style={{\n            height: '80vh',\n            position: 'relative'\n          }} mdxType=\"Section\">\n            {() => <DescriptionBox color={defaultColors.gray} mdxType=\"DescriptionBox\">\n                <h4>Description #1</h4>\n                <p>Supplementary content #1</p>\n              </DescriptionBox>}\n          </Section>\n          <Section trackingId=\"DESC-2\" style={{\n            height: '80vh',\n            position: 'relative'\n          }} mdxType=\"Section\">\n            {() => <DescriptionBox color={defaultColors.red} mdxType=\"DescriptionBox\">\n                <h4>Description #2</h4>\n                <p>Supplementary content #2</p>\n              </DescriptionBox>}\n          </Section>\n          <Section trackingId=\"DESC-3\" style={{\n            height: '80vh',\n            position: 'relative'\n          }} mdxType=\"Section\">\n            {() => <DescriptionBox color={defaultColors.blue} mdxType=\"DescriptionBox\">\n                <h4>Description #3</h4>\n                <p>Supplementary content #3</p>\n              </DescriptionBox>}\n          </Section>\n        </>} mdxType=\"StickyPlot\">\n      {({\n            activeSection,\n            isIntersecting,\n            scrolledRatio\n          }) => activeSection && <CenterBox mdxType=\"CenterBox\">\n            <p>Description box you are viewing:</p>\n            <li>You are viewing <b>{activeSection.id}</b> section</li>\n            <li>Reading Ratio: <b>{activeSection.ratio.toFixed(4)}</b></li>\n            <p>Whole {'<Plot>'}:</p>\n            <li>scrolledRatio: <b>{scrolledRatio.toFixed(4)}</b></li>\n          </CenterBox>}\n    </StickyPlot>\n  </PageProvider>\n    </Playground>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Import `}<inlineCode parentName=\"p\">{`<StickyPlot>`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { PageProvider } from '@react-scrolly/core';\nimport { StickyPlot } from '@react-scrolly/plot';\n`}</code></pre>\n    <p>{`Use it in your component:`}</p>\n    <p><inlineCode parentName=\"p\">{`<StickyPlot>`}</inlineCode>{` takes two components from the following props to render:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`children`}</strong>{`:\nBackground content; it sticks to the viewport while the user is scrolling through the foreground content.`}</li>\n    </ul>\n    <p>{`Since `}<inlineCode parentName=\"p\">{`<StickyPlot>`}</inlineCode>{` is just a `}<inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{` that helps you achieve the sticky scrolling effect with ease,\nit provides the same information: `}<inlineCode parentName=\"p\">{`activeSection`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`isIntersecting`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`scrolledRatio`}</inlineCode>{` as `}<a parentName=\"p\" {...{\n        \"href\": \"/scroll_tracking/plot#properties\"\n      }}>{`Plot`}</a>{` provides.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`renderOverlay`}</strong>{`: Foreground content; you can put sections with `}<inlineCode parentName=\"li\">{`trackedId`}</inlineCode>{` here.\nIts rendered content accounts for the real height of `}<inlineCode parentName=\"li\">{`<StickyPlot>`}</inlineCode>{`, i.e., `}<inlineCode parentName=\"li\">{`scrolledRatio`}</inlineCode>{` given in the background is calculated by the reading progress of the foreground content.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import styledComponents from 'styled-components';\nimport { transparentize } from 'polished'\n\nimport mq from '../config/media-queries';\nimport { defaultColors } from '../config/theme';\n\nconst DEFAULT_COLOR = defaultColors.primary;\n\nexport const DescriptionBox = styledComponents.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 40%;\n  box-sizing: border-box;\n  border: 3px solid ${({ color = DEFAULT_COLOR }) => color};\n  border-radius: 2px;\n  background: ${({ color = DEFAULT_COLOR }) => transparentize(0.8, color)};\n  padding: 1.5rem;\n\n  ${mq.greaterThan('mobile')`\n    width: 55%;\n  `}\n\n  h4 {\n    background: ${defaultColors.background};\n    display: inline-block;\n    padding: 0.1rem 0.5rem;\n    border-radius: 6px;\n    margin-left: -0.3rem;\n    color: ${defaultColors.primary};\n  }\n`;\n","import { css } from 'styled-components';\nimport { lighten } from 'polished'\n\nimport mq from '../config/media-queries';\nimport { defaultColors } from '../config/theme';\n\nexport const borderedStyle = css`\n  position: relative;\n  margin-top: -3px;\n  ${({ height }) => height ? `height: ${height}` : null};\n  border: ${({ color = defaultColors.gray }) => `2.5px solid ${lighten(0.2)(color)}`};\n  border-radius: 2px;\n\n  h5 {\n    font-size: 1.05rem;\n    margin-top: -2px;\n    margin-left: -2px;\n    color: ${defaultColors.white};\n    background-color: ${({ color = defaultColors.text }) => color};\n    display: inline-block;\n    padding: 0.25rem 0.75rem;\n    border-radius: 2px;\n    ${mq.greaterThan('mobile')`\n      font-size: 1.15rem;\n    `}\n  }\n`;\n","import { Observable, of } from 'rxjs';\nimport { map, switchMap, merge, filter } from 'rxjs/operators';\nimport {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n} from 'react';\nimport {\n  // hooks\n  useSubscription,\n  // context\n  PageContext,\n  // types\n  IntersectionInfo,\n  ActiveSectionInfo,\n  PageContextInterface,\n } from '@react-scrolly/core';\n\nexport function useActiveSectionInfo(\n  intersectObsr$: Observable<IntersectionInfo>,\n) {\n  const context = useContext<PageContextInterface | null>(PageContext);\n  const { activeSectionObs$ } = context!;\n\n  /** Function to set the subscription to the info of the active section  */\n  const { setSubscription } = useSubscription(null);\n\n  const [activeSection, setActiveSection] = useState<ActiveSectionInfo | null>(null);\n\n  const isIntersectingObs = useRef(intersectObsr$.pipe(\n    map(({ isIntersecting }) => isIntersecting)\n  ));\n\n  /**\n   * Observer to the changes in the scrolledRatio of the active section\n   * when the section is in the viewport\n   */\n  const activeSectionObsrRef = useRef(\n    // first emit true in order to take the active section info when Page is mounted\n    of(true)\n    // merge it with the intersection observer\n    .pipe(\n      merge(isIntersectingObs.current)\n    )\n    // use `isIntersecting` to determine whether to take the active section info\n    .pipe(\n      switchMap((isIntersecting: boolean) => {\n        return isIntersecting\n          ? activeSectionObs$.pipe(\n            map((activeSectionInfo) => {\n              return activeSectionInfo;\n            })\n          )\n          : of(undefined);\n      }),\n      filter(info => typeof info !== 'undefined'),\n    )\n  );\n\n  useEffect(\n    () => {\n      // set the subscription to the info of the active section\n      setSubscription(activeSectionObsrRef.current.subscribe({\n        next: (activeSectionInfo) => {\n          setActiveSection(activeSectionInfo!);\n        },\n      }));\n    },\n    [],\n  );\n\n  return {\n    activeSection,\n  };\n}\n","import { useIntersectionObservable, useScrolledRatio } from '@react-scrolly/core';\n\nimport { useActiveSectionInfo } from './useActiveSectionInfo';\n\nexport function usePlot(\n  /** Ref of the plot being tracked */\n  plotRef: React.RefObject<HTMLElement>,\n\n  /**\n   * By setting an unique Section ID, you can know which section the user is currently viewing.\n   * If `trackingId` is not null,\n   * it will trigger the update of the active section infomation managed in `<Page>`.\n   * Please make sure that on the same `scrollTop`,\n   * there is **NO** more than one tracked section (section with `trackingId`).\n   */\n  trackingId?: string,\n) {\n  const intersectObsr$ = useIntersectionObservable(plotRef, trackingId);\n  const sectionInfo = useScrolledRatio(plotRef, intersectObsr$, trackingId);\n  const activeSection = useActiveSectionInfo(intersectObsr$);\n\n  return {\n    sectionInfo,\n    activeSection,\n  };\n}\n","import React, { useRef } from 'react';\nimport {\n  // types\n  SectionProps,\n } from '@react-scrolly/core';\n\nimport { usePlot } from '../hooks/usePlot';\n\nexport const Plot = ({\n  className,\n  style,\n  children,\n  trackingId,\n  ...restProps\n}: SectionProps) => {\n  const plotRef = useRef<HTMLDivElement>(null);\n  const { sectionInfo, activeSection } = usePlot(plotRef, trackingId);\n\n  return (\n    <div\n      ref={plotRef}\n      className={className}\n      style={style}\n      {...restProps}\n    >\n      {children({\n        ...sectionInfo,\n        ...activeSection,\n      })}\n    </div>\n  );\n};\n","import React, { useRef } from 'react';\nimport {\n  // utils\n  getStickyPosition,\n  // types\n  SectionProps,\n } from '@react-scrolly/core';\n\nimport { usePlot } from '../hooks/usePlot';\n\nexport interface StickyPlotProps extends SectionProps {\n  /**\n   * Render the non-sticky part of the section,\n   * which is placed on top of the children\n   */\n  renderOverlay: React.ReactNode;\n}\n\nexport const StickyPlot = ({\n  className,\n  style,\n  children,\n  trackingId,\n  renderOverlay,\n  ...restProps\n}: StickyPlotProps) => {\n  const outerStyle: React.CSSProperties = {\n    ...style,\n    position: 'relative',\n  };\n\n  const plotRef = useRef<HTMLDivElement>(null);\n  const { sectionInfo, activeSection } = usePlot(plotRef, trackingId);\n\n  const stickyStyle: React.CSSProperties = getStickyPosition(sectionInfo);\n\n  return (\n    <div\n      ref={plotRef}\n      className={className}\n      style={outerStyle}\n      {...restProps}\n    >\n      <div style={stickyStyle}>\n        {children({\n          ...sectionInfo,\n          ...activeSection,\n        })}\n      </div>\n      <div style={{ position: 'relative' }}>\n        {renderOverlay}\n      </div>\n    </div>\n  );\n};\n","export * from './hooks/useActiveSectionInfo';\nexport * from './hooks/usePlot';\nexport * from './components/Plot';\nexport * from './components/StickyPlot';\n"],"sourceRoot":""}