{"version":3,"sources":["/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/docs/src/ScrollTracking/Plot.mdx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/docs/src/components/DemoSection.jsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/docs/src/config/shared-styles.js","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/hooks/useActiveSectionInfo.ts","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/components/Plot.tsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/components/StickyPlot.tsx","/Users/garfieldduck/Documents/Projects/SelfProject/react-scrolly/packages/plot/src/index.ts"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_Users_garfieldduck_Documents_Projects_SelfProject_react_scrolly_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","className","_components_DemoWrapper__WEBPACK_IMPORTED_MODULE_6__","_react_scrolly_core__WEBPACK_IMPORTED_MODULE_4__","_react_scrolly_plot__WEBPACK_IMPORTED_MODULE_5__","renderOverlay","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","_components_DemoSection__WEBPACK_IMPORTED_MODULE_7__","trackingId","color","defaultColors","red","height","orange","yellow","green","blue","purple","_ref2","activeSection","_components_CenterBox__WEBPACK_IMPORTED_MODULE_8__","boldColor","toLowerCase","ratio","toFixed","href","docz__WEBPACK_IMPORTED_MODULE_3__","of","StickyPlot","isMDXComponent","DemoSection","styled","Section","_templateObject","_ref$height","_ref2$gradient","gradient","BorderedDemoSection","_templateObject2","borderedStyle","css","concat","_ref2$color","gray","lighten","white","_ref3","_ref3$color","text","mq","greaterThan","useActiveSectionInfo","intersectObsr$","activeSectionObs$","useContext","PageContext","setSubscription","useSubscription","_useState","useState","_useState2","slicedToArray","setActiveSection","isIntersectingObs","useRef","pipe","map","isIntersecting","activeSectionObsrRef","merge","current","switchMap","activeSectionInfo","undefined","filter","info","useEffect","subscribe","next","Plot","style","children","restProps","objectWithoutProperties","sectionRef","useIntersectionObservable","sectionInfo","useSectionRatio","react_default","createElement","ref","objectSpread","outerStyle","position","stickyStyle","getStickyPosition","__webpack_require__","d","__webpack_exports__","StickyPlot_StickyPlot"],"mappings":"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","file":"static/js/docs-src-scroll-tracking-plot.518cde0c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Props } from 'docz';\nimport { PageProvider, Section } from '@react-scrolly/core';\nimport { StickyPlot } from '@react-scrolly/plot';\nimport { DemoWrapper } from '../components/DemoWrapper';\nimport { BorderedDemoSection } from '../components/DemoSection';\nimport { CenterBox } from '../components/CenterBox';\nimport { defaultColors } from '../config/theme';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"plot\"\n    }}>{`Plot`}</h1>\n    <h2 {...{\n      \"id\": \"track-scroll-progress-of-the-section-closest-to-the-bottom-of-the-viewport\"\n    }}>{`Track scroll progress of the section closest to the bottom of the viewport`}</h2>\n    <p><inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{` is another kind of section which allows you to track the reading progress of `}<inlineCode parentName=\"p\">{`<Section>`}</inlineCode>{` users are currently viewing\n(closest to the bottom of the viewport).`}</p>\n    <p>{`This is particularly handy when you want to display some effects based on the section and its progress users are currently reading.`}</p>\n    <p>{`Before you start using `}<inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{`, you have to assign unique `}<inlineCode parentName=\"p\">{`trackingId`}</inlineCode>{` to sections you are going to track:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Section trackingId=\"GREEN\">...</Section>\n`}</code></pre>\n    <p>{`After that, `}<inlineCode parentName=\"p\">{`<PageProvider>`}</inlineCode>{` will keep the scrolling information of all the sections of `}<inlineCode parentName=\"p\">{`trackingId`}</inlineCode>{`,\nand `}<inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{` will to be updated with the scrolling information of the section closet to the bottom of the viewport when it is scrolled into the viewport.`}</p>\n    <p>{`In other words, `}<inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{` provides:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`All the information provided by `}<inlineCode parentName=\"li\">{`<Section>`}</inlineCode></li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`trackingId`}</inlineCode>{` of the `}<inlineCode parentName=\"li\">{`<Section>`}</inlineCode>{` currently closet to the bottom of the viewport, and its scroll progress.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <DemoWrapper mdxType=\"DemoWrapper\">\n  <PageProvider mdxType=\"PageProvider\">\n    <StickyPlot renderOverlay={<>\n            <BorderedDemoSection trackingId=\"RED\" color={defaultColors.red} height=\"100vh\" mdxType=\"BorderedDemoSection\">\n              {() => <h5>\n                  RED\n                </h5>}\n            </BorderedDemoSection>\n            <BorderedDemoSection trackingId=\"ORANGE\" color={defaultColors.orange} height=\"50vh\" mdxType=\"BorderedDemoSection\">\n              {() => <h5>\n                  ORANGE\n                </h5>}\n            </BorderedDemoSection>\n            <BorderedDemoSection trackingId=\"YELLOW\" color={defaultColors.yellow} height=\"50vh\" mdxType=\"BorderedDemoSection\">\n              {() => <h5>\n                  YELLOW\n                </h5>}\n            </BorderedDemoSection>\n            <BorderedDemoSection trackingId=\"GREEN\" color={defaultColors.green} height=\"50vh\" mdxType=\"BorderedDemoSection\">\n              {() => <h5>\n                  GREEN\n                </h5>}\n            </BorderedDemoSection>\n            <BorderedDemoSection trackingId=\"BLUE\" color={defaultColors.blue} height=\"50vh\" mdxType=\"BorderedDemoSection\">\n              {() => <h5>\n                  BLUE\n                </h5>}\n            </BorderedDemoSection>\n            <BorderedDemoSection trackingId=\"PURPLE\" color={defaultColors.purple} height=\"60vh\" mdxType=\"BorderedDemoSection\">\n              {() => <h5>\n                  PURPLE\n                </h5>}\n            </BorderedDemoSection>\n          </>} mdxType=\"StickyPlot\">\n        {({\n            activeSection\n          }) => activeSection && <CenterBox boldColor={defaultColors[activeSection.id.toLowerCase()]} mdxType=\"CenterBox\">\n              <li>You are viewing <b>{activeSection.id}</b> section</li>\n              <li>Reading Ratio: {activeSection.ratio.toFixed(4)}</li>\n            </CenterBox>}\n      </StickyPlot>\n  </PageProvider>\n    </DemoWrapper>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Import `}<inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { PageProvider } from '@react-scrolly/core';\nimport { Plot } from '@react-scrolly/plot';\n`}</code></pre>\n    <p>{`Use it in your component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<PageProvider>\n  ...\n  <Plot>\n    {({ sectionInfo, activeSection }) => (\n      <div>\n        <h2>Scroll info of this Plot</h2>\n        <span>{sectionInfo.isIntersecting}, {sectionInfo.scrolledRatio}</span>\n      </div>\n      <div>\n        <h2>Section closet to the bottom of viewport</h2>\n        <span>\\`trackingId\\`:  {activeSection.id}</span>\n        <span>Ratio of the scrolling progress: {activeSection.ratio}</span>\n      </div>\n    )}\n  </Plot>\n  <Section trackingId=\"RED\">...</Section>\n  <Section trackingId=\"ORANGE\">...</Section>\n  <Section trackingId=\"YELLOW\">...</Section>\n  ...\n</PageProvider>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"stickyplot\"\n    }}><inlineCode parentName=\"h3\">{`<StickyPlot>`}</inlineCode></h3>\n    <p>{`If you want to stick the `}<inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{` like the demo above,\nyou can use `}<a parentName=\"p\" {...{\n        \"href\": \"/pinning_sections/sticky_plot\"\n      }}>{`StickyPlot`}</a>{` which provides the same information in the render props as `}<inlineCode parentName=\"p\">{`<Plot>`}</inlineCode>{`,\nwhile sticking the background content in the viewport when its foreground content is visible the viewport.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`isIntersecting`}</inlineCode>{`: same as the `}<inlineCode parentName=\"li\">{`isIntersecting`}</inlineCode>{` of `}<inlineCode parentName=\"li\">{`sectionInfo`}</inlineCode>{` in `}<a parentName=\"li\" {...{\n          \"href\": \"/scroll_tracking/section#properties\"\n        }}>{`Section`}</a></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`scrolledRatio`}</inlineCode>{`: same as the `}<inlineCode parentName=\"li\">{`isIntersecting`}</inlineCode>{` of `}<inlineCode parentName=\"li\">{`sectionInfo`}</inlineCode>{` in `}<a parentName=\"li\" {...{\n          \"href\": \"/scroll_tracking/section#properties\"\n        }}>{`Section`}</a></li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`activeSection`}</inlineCode>{` provides:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`id`}</inlineCode>{`: `}<inlineCode parentName=\"li\">{`trackingId`}</inlineCode>{` of the tracked `}<inlineCode parentName=\"li\">{`<Section>`}</inlineCode>{` closest to the bottom of`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ratio`}</inlineCode>{`: Ratio of the tracked `}<inlineCode parentName=\"li\">{`<Section>`}</inlineCode>{` closest to the bottom being read`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"advanced-usages\"\n    }}>{`Advanced usages`}</h2>\n    <h3 {...{\n      \"id\": \"useactivesectioninfo-hook\"\n    }}><inlineCode parentName=\"h3\">{`useActiveSectionInfo`}</inlineCode>{` hook`}</h3>\n    <p>{`Import the hooks:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useIntersectionObservable, useSectionRatio } from '@react-scrolly/core';\nimport { useActiveSectionInfo } from '@react-scrolly/plot';\n`}</code></pre>\n    <p>{`You can get the same information using the hooks:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// assign the ref to the component\nconst plotRef = useRef<HTMLDivElement>(null);\n\nconst intersectObsr$ = useIntersectionObservable(plotRef, trackingId);\nconst sectionInfo = useSectionRatio(plotRef, intersectObsr$, trackingId);\nconst activeSection = useActiveSectionInfo(intersectObsr$);\n`}</code></pre>\n    <Props of={StickyPlot} mdxType=\"Props\" />\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","import styled from 'styled-components';\nimport { Section } from '@react-scrolly/core';\n\nimport { borderedStyle } from '../config/shared-styles';\n\nexport const DemoSection = styled(Section)`\n  position: relative;\n  height: ${({ height = '100vh' }) => height};\n  background-image: ${({ gradient = 'linear-gradient(to top, #e6e9f2 0%, #eef1f6 100%)' }) => gradient};\n  box-shadow: 0 15px 30px 0 rgba(0,0,0,.11), 0 6px 16px 0 rgba(0,0,0,.08);\n  border-radius: 2px;\n  margin: 1rem 0;\n`;\n\nexport const BorderedDemoSection = styled(Section)`${borderedStyle}`;\n","import { css } from 'styled-components';\nimport { lighten } from 'polished'\n\nimport mq from '../config/media-queries';\nimport { defaultColors } from '../config/theme';\n\nexport const borderedStyle = css`\n  position: relative;\n  margin-top: -3px;\n  ${({ height }) => height ? `height: ${height}` : null};\n  border: ${({ color = defaultColors.gray }) => `2.5px solid ${lighten(0.2)(color)}`};\n  border-radius: 2px;\n\n  h5 {\n    font-size: 1.05rem;\n    margin-top: -2px;\n    margin-left: -2px;\n    color: ${defaultColors.white};\n    background-color: ${({ color = defaultColors.text }) => color};\n    display: inline-block;\n    padding: 0.25rem 0.75rem;\n    border-radius: 2px;\n    ${mq.greaterThan('mobile')`\n      font-size: 1.15rem;\n    `}\n  }\n`;\n","import { Observable, of } from 'rxjs';\nimport { map, switchMap, merge, filter } from 'rxjs/operators';\nimport {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n} from 'react';\nimport {\n  // hooks\n  useSubscription,\n  // context\n  PageContext,\n  // types\n  IntersectionInfo,\n  ActiveSectionInfo,\n  PageContextInterface,\n } from '@react-scrolly/core';\n\nexport function useActiveSectionInfo(\n  intersectObsr$: Observable<IntersectionInfo>,\n) {\n  const context = useContext<PageContextInterface | null>(PageContext);\n  const { activeSectionObs$ } = context!;\n\n  /** Function to set the subscription to the info of the active section  */\n  const { setSubscription } = useSubscription(null);\n\n  const [activeSection, setActiveSection] = useState<ActiveSectionInfo | null>(null);\n\n  const isIntersectingObs = useRef(intersectObsr$.pipe(\n    map(({ isIntersecting }) => isIntersecting)\n  ));\n\n  /**\n   * Observer to the changes in the scrolledRatio of the active section\n   * when the section is in the viewport\n   */\n  const activeSectionObsrRef = useRef(\n    // first emit true in order to take the active section info when Page is mounted\n    of(true)\n    // merge it with the intersection observer\n    .pipe(\n      merge(isIntersectingObs.current)\n    )\n    // use `isIntersecting` to determine whether to take the active section info\n    .pipe(\n      switchMap((isIntersecting: boolean) => {\n        return isIntersecting\n          ? activeSectionObs$.pipe(\n            map((activeSectionInfo) => {\n              return activeSectionInfo;\n            })\n          )\n          : of(undefined);\n      }),\n      filter(info => typeof info !== 'undefined'),\n    )\n  );\n\n  useEffect(\n    () => {\n      // set the subscription to the info of the active section\n      setSubscription(activeSectionObsrRef.current.subscribe({\n        next: (activeSectionInfo) => {\n          setActiveSection(activeSectionInfo!);\n        },\n      }));\n    },\n    [],\n  );\n\n  return {\n    activeSection,\n  };\n}\n","import React, { useRef } from 'react';\nimport {\n  // hooks\n  useIntersectionObservable,\n  useSectionRatio,\n  // types\n  SectionProps,\n } from '@react-scrolly/core';\n\nimport { useActiveSectionInfo } from '../hooks/useActiveSectionInfo';\n\nexport const Plot = ({\n  className,\n  style,\n  children,\n  trackingId,\n  ...restProps\n}: SectionProps) => {\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const intersectObsr$ = useIntersectionObservable(sectionRef, trackingId);\n  const sectionInfo = useSectionRatio(sectionRef, intersectObsr$, trackingId);\n  const activeSection = useActiveSectionInfo(intersectObsr$);\n\n  return (\n    <div\n      ref={sectionRef}\n      className={className}\n      style={style}\n      {...restProps}\n    >\n      {children({\n        ...sectionInfo,\n        ...activeSection,\n      })}\n    </div>\n  );\n};\n","import React, { useRef } from 'react';\nimport {\n  // hooks\n  useIntersectionObservable,\n  useSectionRatio,\n  // utils\n  getStickyPosition,\n  // types\n  SectionProps,\n } from '@react-scrolly/core';\n\nimport { useActiveSectionInfo } from '../hooks/useActiveSectionInfo';\n\nexport interface StickyPlotProps extends SectionProps {\n  /**\n   * Render the non-sticky part of the section,\n   * which is placed on top of the children\n   */\n  renderOverlay: React.ReactNode;\n}\n\nexport const StickyPlot = ({\n  className,\n  style,\n  children,\n  trackingId,\n  renderOverlay,\n  ...restProps\n}: StickyPlotProps) => {\n  const outerStyle: React.CSSProperties = {\n    ...style,\n    position: 'relative',\n  };\n\n  const sectionRef = useRef<HTMLDivElement>(null);\n  const intersectObsr$ = useIntersectionObservable(sectionRef, trackingId);\n  const sectionInfo = useSectionRatio(sectionRef, intersectObsr$, trackingId);\n  const activeSection = useActiveSectionInfo(intersectObsr$);\n\n  const stickyStyle: React.CSSProperties = getStickyPosition(sectionInfo);\n\n  return (\n    <div\n      ref={sectionRef}\n      className={className}\n      style={outerStyle}\n      {...restProps}\n    >\n      <div style={stickyStyle}>\n        {children({\n          ...sectionInfo,\n          ...activeSection,\n        })}\n      </div>\n      <div style={{ position: 'relative' }}>\n        {renderOverlay}\n      </div>\n    </div>\n  );\n};\n","export * from './hooks/useActiveSectionInfo';\nexport * from './components/Plot';\nexport * from './components/StickyPlot';\n"],"sourceRoot":""}